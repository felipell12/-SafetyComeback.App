// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafetyComeback.App.Persistencia;

namespace SafetyComeback.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211005161014_Oct_5")]
    partial class Oct_5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SafetyComeback.App.Dominio.AforoClase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClaseId");

                    b.HasIndex("PersonaId");

                    b.ToTable("AforoClases");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("SalonId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Dependencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Aforo")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SedeId");

                    b.ToTable("Dependencias");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estado_COVID")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Aforo")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SedeId");

                    b.ToTable("Salones");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Sintoma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeriodoAislamiento")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Sintomas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Sintomas");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Universidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universidades");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Directivo", b =>
                {
                    b.HasBaseType("SafetyComeback.App.Dominio.Persona");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasDiscriminator().HasValue("Directivo");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("SafetyComeback.App.Dominio.Persona");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<int>("Semestre")
                        .HasColumnType("int");

                    b.HasIndex("ProgramaId");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Profesor", b =>
                {
                    b.HasBaseType("SafetyComeback.App.Dominio.Persona");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("Materia")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("FacultadId");

                    b.HasDiscriminator().HasValue("Profesor");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.ServicioGeneral", b =>
                {
                    b.HasBaseType("SafetyComeback.App.Dominio.Persona");

                    b.Property<string>("turno")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ServicioGeneral");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.AforoClase", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Clase", "Clase")
                        .WithMany("AforoClases")
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafetyComeback.App.Dominio.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Clase", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafetyComeback.App.Dominio.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Dependencia", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Sede", "Sede")
                        .WithMany("Dependencias")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Programa", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Facultad", "Facultad")
                        .WithMany("Programas")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Salon", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Sede", "Sede")
                        .WithMany("Salones")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Sintoma", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Persona", "Persona")
                        .WithMany("Sintomas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Estudiante", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Profesor", b =>
                {
                    b.HasOne("SafetyComeback.App.Dominio.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Clase", b =>
                {
                    b.Navigation("AforoClases");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Facultad", b =>
                {
                    b.Navigation("Programas");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Persona", b =>
                {
                    b.Navigation("Sintomas");
                });

            modelBuilder.Entity("SafetyComeback.App.Dominio.Sede", b =>
                {
                    b.Navigation("Dependencias");

                    b.Navigation("Salones");
                });
#pragma warning restore 612, 618
        }
    }
}
